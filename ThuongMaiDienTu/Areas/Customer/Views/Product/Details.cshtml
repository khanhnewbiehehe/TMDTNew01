@model ThuongMaiDienTu.Models.Product
@{
    int index = 0;
    ViewData["Title"] = "Chi tiết sản phẩm - " + Model.Name;
}

<link rel="stylesheet" href="~/css/product-details.css" />

<div class="container p-5">
    <div class="mt-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="/">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="blue" width="16px" class="me-2" viewBox="0 0 576 512">
                            <path d="M575.8 255.5c0 18-15 32.1-32 32.1l-32 0 .7 160.2c0 2.7-.2 5.4-.5 8.1l0 16.2c0 22.1-17.9 40-40 40l-16 0c-1.1 0-2.2 0-3.3-.1c-1.4 .1-2.8 .1-4.2 .1L416 512l-24 0c-22.1 0-40-17.9-40-40l0-24 0-64c0-17.7-14.3-32-32-32l-64 0c-17.7 0-32 14.3-32 32l0 64 0 24c0 22.1-17.9 40-40 40l-24 0-31.9 0c-1.5 0-3-.1-4.5-.2c-1.2 .1-2.4 .2-3.6 .2l-16 0c-22.1 0-40-17.9-40-40l0-112c0-.9 0-1.9 .1-2.8l0-69.7-32 0c-18 0-32-14-32-32.1c0-9 3-17 10-24L266.4 8c7-7 15-8 22-8s15 2 21 7L564.8 231.5c8 7 12 15 11 24z" />
                        </svg>
                        Home
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">Chi tiết sản phẩm</li>
            </ol>
        </nav>
    </div>
    <div class="card mt-3 productDetails-card mx-auto shadow">
        <div class="card-header bg-white">
            <h4 class="mb-0">Chi tiết sản phẩm</h4>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="card-media p-3">
                        <div id="carouselExampleIndicators" class="carousel slide shadow">
                            <div class="carousel-indicators">
                                @{
                                    index = 0;
                                    foreach (var item in Model.Images)
                                    {
                                        if (index == 0)
                                        {
                                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@index" class="active" aria-current="true" aria-label="Slide @(index+1)"></button>
                                        }
                                        else
                                        {
                                            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@index" aria-label="Slide @(index+1)"></button>
                                        }
                                        index++;
                                    }
                                }
                            </div>
                            <div class="carousel-inner">
                                @{
                                    index = 0;
                                    foreach (var item in Model.Images)
                                    {
                                        if (index == 0)
                                        {
                                            <div class="carousel-item active">
                                                <img src="@item.Url" class="d-block w-100" alt="Ảnh sản phẩm">
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item">
                                                <img src="@item.Url" class="d-block w-100" alt="Ảnh sản phẩm">
                                            </div>
                                        }
                                        index++;
                                    }
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    </div>
                </div>                <div class="col-md-6">
                    <div class="card-content p-3">
                        <h2 class="card-title">@Model.Name</h2>
                        
                        <div class="price-cards">
                            <h5 class="mt-4 mb-3">Bảng giá theo số lượng:</h5>                            <div class="d-flex flex-wrap justify-content-start">
                                @{
                                    var registration = ViewBag.Registration;
                                    var priceList = Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.ToList()[0].Prices.OrderBy(p => p.Number).ToList();
                                    
                                    // Tìm mốc giá cao nhất đã đạt được
                                    var currentActivePriceLevel = priceList.Where(p => registration >= p.Number).OrderByDescending(p => p.Number).FirstOrDefault();
                                    
                                    // Card mặc định (mốc 0)
                                    bool isDefaultActive = (currentActivePriceLevel == null);
                                    <div class="mini-card mt-2 shadow mx-2 @(isDefaultActive ? "active" : "")">
                                        <div class="card-header">0</div>
                                        <div class="card-body">@Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.FirstOrDefault().MaxPrice.ToString("N0")</div>
                                    </div>
                                    
                                    // Các card mốc giá
                                    foreach (var item in priceList)
                                    {
                                        bool isActive = (currentActivePriceLevel != null && item.Number == currentActivePriceLevel.Number);
                                        
                                        <div class="mini-card shadow mt-2 mx-2 @(isActive ? "active" : "")">
                                            <div class="card-header">@item.Number</div>
                                            <div class="card-body">@item.Price.ToString("N0")</div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                        
                        @{
                            double percent = ViewBag.Registration * 100.0 / ViewBag.Quantity;
                            var prices = Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.ToList()[0].Prices;
                        }
                        <div class="registration-status mt-4">
                            <h5 class="mb-4">Tiến độ đăng ký:</h5>
                            <div class="progress" role="progressbar" title="@ViewBag.Registration" aria-label="Animated striped example" aria-valuenow="@percent" aria-valuemin="0" aria-valuemax="100">
                                @foreach (var item in prices)
                                {
                                    double markerPosition = item.Number * 100.0 / ViewBag.Quantity;
                                    <div class="price-marker" style="left: @markerPosition%" data-number="@item.Number"></div>
                                }
                                <div class="progress-bar progress-bar-striped progress-bar-animated" style="width: @percent%"></div>
                            </div>
                            <div class="d-flex justify-content-between mt-2">
                                <div class="sub-title">Tích lũy: <span class="badge bg-warning">@ViewBag.Registration</span></div>
                                <div class="sub-title">Tối đa: <span class="badge bg-success">@ViewBag.Quantity</span></div>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <div class="sub-title">Thời gian mở bán:</div>
                            <div class="my_countdown d-flex justify-content-center align-items-center">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                    <path d="M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120l0 136c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2 280 120c0-13.3-10.7-24-24-24s-24 10.7-24 24z" />
                                </svg>
                                @{
                                    var endDate = Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().DateEnd;
                                    var isFull = ViewBag.Registration >= ViewBag.Quantity;
                                    var isEnded = DateTime.Now > endDate;
                                }
                                <span id="countdown--1" data-end="@endDate" 
                                      data-ended="@isEnded.ToString().ToLower()" 
                                      data-full="@isFull.ToString().ToLower()"></span>
                            </div>
                        </div>

                        <div class="product-variants mt-4">
                            <h5 class="mb-3">Phiên bản sản phẩm:</h5>
                            <div class="d-flex flex-wrap">
                                @{
                                    foreach (var item in Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types)
                                    {
                                        <div class="card mx-2 type-card">
                                            <div class="card-image">
                                                <img src="@item.ImageUrl" alt="Ảnh sản phẩm">
                                            </div>
                                            <div class="d-flex justify-content-center align-items-center px-2 py-2">
                                                <span class="text-dark">@item.Name</span>
                                            </div>
                                        </div>
                                    }
                                }
                            </div>
                        </div>

                        <div class="mt-4 d-flex flex-wrap">
                            <button onclick="CreateFavourite(@Model.Id)" class="btn btn-danger fw-bold me-2 mb-2">
                                <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" class="me-2" viewBox="0 0 512 512">
                                    <path d="M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8l0-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5l0 3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20-.1-.1s0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5l0 3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2l0-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z" />
                                </svg>
                                Yêu thích
                            </button>
                            @{
                                if (DateTime.Now < @Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().DateEnd)
                                {
                                    <button class="btn btn-success fw-bold mb-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasExample" aria-controls="offcanvasExample">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" class="me-2" viewBox="0 0 576 512">
                                            <path d="M0 24C0 10.7 10.7 0 24 0L69.5 0c22 0 41.5 12.8 50.6 32l411 0c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3l-288.5 0 5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5L488 336c13.3 0 24 10.7 24 24s-10.7 24-24 24l-288.3 0c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5L24 48C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
                                        </svg>
                                        Đặt hàng
                                    </button>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>            <div class="product-details mt-4">                <div class="sub-card shadow mx-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>Mô tả sản phẩm</div>
                        <div>
                            <svg class="toggle-arrow" xmlns="http://www.w3.org/2000/svg" fill="#666" width="20px" viewBox="0 0 320 512" style="cursor: pointer;">
                                <path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z" />
                            </svg>
                        </div>
                    </div>
                    <div class="card-body d-none">
                        @Html.Raw(Html.Encode(Model.Description).Replace("\n", "<br/>"))
                    </div>
                </div>
                  <div class="sub-card shadow mx-3 mt-3">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div>Đánh giá sản phẩm</div>
                        <div>
                            <svg class="toggle-arrow" xmlns="http://www.w3.org/2000/svg" fill="#666" width="20px" viewBox="0 0 320 512" style="cursor: pointer;">
                                <path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z" />
                            </svg>
                        </div>
                    </div>
                    <div class="card-body d-none">
                        <div class="text-center py-3">
                            <p class="mb-0">Chưa có đánh giá nào cho sản phẩm này</p>
                            <small class="text-muted">Hãy là người đầu tiên đánh giá sản phẩm này!</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
      <div class="trend_product">
        <h3 class="my_smalltitle">Trending</h3>
        <div id="list-product" class="list_product owl-carousel carousel-1">
        </div>
    </div>
</div>

<div class="offcanvas offcanvas-start my-offcanvas" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header d-flex justify-content-between align-items-center">
        <h5 class="offcanvas-title" id="offcanvasExampleLabel">Danh sách loại sản phẩm</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="list-productTypes">
            @{
                foreach (var item in Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types)
                {
                    <div class="card shadow p-3 my-3">
                        <div class="d-flex">
                            <div class="card-image" style="width: 80px; height: 80px;">
                                <img src="@item.ImageUrl" alt="Ảnh sản phẩm" class="img-fluid">
                            </div>                            <div class="ms-3 flex-grow-1">
                                <h5 class="card-title mb-2">@item.Name</h5>
                                <div class="stock-info mb-2">
                                    <small class="text-muted">Còn lại: <span class="badge bg-info stock-remaining" data-typeid="@item.Id">@item.Quantity</span></small>
                                </div>
                                <div class="quantity-input mt-2 d-flex align-items-center">
                                    <button type="button" class="decrease">−</button>
                                    <input type="number" min="0" max="@item.Quantity" value="0" class="quantity" data-typeid="@item.Id" data-imageurl="@item.ImageUrl" data-name="@item.Name" data-stock="@item.Quantity"/>
                                    <button type="button" class="increase">+</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }        </div>        <input hidden id="GiaTien" value="@Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.FirstOrDefault().MaxPrice"></input>
        <input hidden id="SoLuongKhaDung" value="@(ViewBag.Quantity-ViewBag.Registration)"></input>
        <input hidden id="CurrentRegistration" value="@ViewBag.Registration"></input>
        <input hidden id="MaxQuantity" value="@ViewBag.Quantity"></input>
        <input hidden id="PriceData" value='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.ToList()[0].Prices.OrderBy(p => p.Number).Select(p => new { Number = p.Number, Price = p.Price })))'></input>
        
        <!-- Progress Bar for Price Levels -->
        <div class="price-progress mt-4 p-3 bg-white rounded shadow-sm">
            <h6 class="mb-3">
                <svg xmlns="http://www.w3.org/2000/svg" fill="#28a745" width="16px" class="me-2" viewBox="0 0 448 512">
                    <path d="M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                </svg>
                Tiến độ đạt mức giá tốt hơn
            </h6>
              @{
                var currentTotal = ViewBag.Registration;
                var maxQuantity = ViewBag.Quantity;
                var progressPriceList = Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.ToList()[0].Prices.OrderBy(p => p.Number).ToList();
                var nextPriceLevel = progressPriceList.FirstOrDefault(p => p.Number > currentTotal);
                var currentPriceLevel = progressPriceList.LastOrDefault(p => p.Number <= currentTotal);
                
                double progressPercent = 0;
                int needed = 0;
                string nextPriceText = "";
                
                if (nextPriceLevel != null)
                {
                    needed = nextPriceLevel.Number - currentTotal;
                    progressPercent = (double)currentTotal / nextPriceLevel.Number * 100;
                    nextPriceText = nextPriceLevel.Price.ToString("N0") + " VND";
                }
                else if (currentTotal < maxQuantity)
                {
                    // Đã đạt mức giá tốt nhất nhưng chưa full
                    needed = maxQuantity - currentTotal;
                    progressPercent = (double)currentTotal / maxQuantity * 100;
                    nextPriceText = "Đã đạt giá tốt nhất";
                }
                else
                {
                    // Đã full
                    progressPercent = 100;
                    nextPriceText = "Đã đạt tối đa";
                }
            }
            
            <div class="progress mb-3" style="height: 8px;">
                <div class="progress-bar bg-success" role="progressbar" 
                     style="width: @progressPercent%" 
                     aria-valuenow="@progressPercent" 
                     aria-valuemin="0" 
                     aria-valuemax="100">
                </div>
            </div>
            
            <div class="d-flex justify-content-between align-items-center text-sm">
                <div>
                    <span class="text-muted">Hiện tại:</span>
                    <span class="badge bg-info">@currentTotal</span>
                </div>
                @if (nextPriceLevel != null)
                {
                    <div class="text-center">
                        <div class="text-primary fw-bold" id="quantity-needed">Cần thêm @needed để đạt @nextPriceText</div>
                    </div>
                    <div>
                        <span class="text-muted">Mục tiêu:</span>
                        <span class="badge bg-success">@nextPriceLevel.Number</span>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <div class="text-success fw-bold" id="quantity-needed">@nextPriceText</div>
                    </div>
                    <div>
                        <span class="text-muted">Tối đa:</span>
                        <span class="badge bg-success">@maxQuantity</span>
                    </div>
                }
            </div>
        </div>
          <div class="order-summary mt-4 p-3 bg-light rounded">
            <h5 class="mb-3">Tổng đơn hàng</h5>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <p class="mb-0"><strong>Mức giá hiện tại:</strong></p>
                <span id="current-price-level" class="badge bg-warning">@Model.Launches.OrderByDescending(x => x.Id).FirstOrDefault().Types.FirstOrDefault().MaxPrice.ToString("N0") VND</span>
            </div>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <p class="mb-0"><strong>Tổng số lượng:</strong></p>
                <span id="Total-product" class="badge bg-primary">0</span>
            </div>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <p class="mb-0"><strong>Tổng giá trị:</strong></p>
                <span id="total-value" class="badge bg-success">0 VND</span>
            </div>
            <div class="d-flex justify-content-between align-items-center mb-3">
                <p class="mb-0"><strong>Tiền cọc (30%):</strong></p>
                <span id="deposit-amount" class="badge bg-danger">0 VND</span>
            </div>
            <button onclick="StartOrder()" class="btn btn-success fw-bold w-100">
                <svg xmlns="http://www.w3.org/2000/svg" fill="white" width="20px" class="me-2" viewBox="0 0 576 512">
                    <path d="M0 24C0 10.7 10.7 0 24 0L69.5 0c22 0 41.5 12.8 50.6 32l411 0c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3l-288.5 0 5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5L488 336c13.3 0 24 10.7 24 24s-10.7 24-24 24l-288.3 0c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5L24 48C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z" />
                </svg>
                Cọc ngay
            </button>
        </div>
        
        <div class="mt-4 p-3 bg-light rounded">
            <p class="text-danger fw-bold mb-2">Ghi chú quan trọng:</p>
            <p class="mb-0">Bạn cần phải cọc <span class="text-danger fw-bold">30% giá trị đơn hàng theo giá tối đa</span> để phòng trường hợp khi bạn hủy yêu cầu. Chúng tôi sẽ dùng tiền đó để bù cho những khách hàng khác để đảm bảo quyền lợi về giá cho họ.</p>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/product-details.js"></script>
    <script src="~/LoadData/LoadProduct.js"></script>
}
